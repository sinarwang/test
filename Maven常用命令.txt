    mvn archetype:create ：创建 Maven 项目
    mvn compile ：编译源代码（编译到target文件夹中）
    mvn test-compile ：编译测试代码
    mvn test ： 运行应用程序中的单元测试
    mvn site ： 生成项目相关信息的网站
    mvn clean ：清除目标目录中的生成结果（把默认target文件夹中的数据清理）
    mvn package ： 项目打包
    mvn install ：将打包好的包安装到本地仓库中，以使其塔项目能够调用
    mvn eclipse:eclipse ：生成 Eclipse 项目文件
    mvn -Dmaven.test.skip=true : 忽略测试文档编译
    cargo:deploy    ：部署到私有服务器上

    当然这些命令可以一起使用比如下
    打jar包并且安装到别的应用  clean compile package install  (清理，编译，打包，安装jar)
    打war包并部署  clean compile package cargo:deploy(清理，编译，打包，安装war)


    package tomcat:redeploy


    1、maven包查询：
    http://search.maven.org/
    http://mvnrepository.com/ 

    2.、公共仓库：
    spring :  http://maven.springframework.org/release/
    oracle :  http://download.oracle.com/maven
    Jboss  :  https://repository.jboss.org/nexus/content/repositories/releases/
              https://repository.jboss.org/nexus/content/groups/public-jboss


本地仓库的配置为：
<localRepository>F:\apache-maven-3.3.9\repo</localRepository>

共享仓库的地址配置为:
<mirrors>
    <mirror>
      <id>CN</id>
      <name>OSChina Central</name>                           
      <url>http://maven.oschina.net/content/groups/public/</url>
      <mirrorOf>central</mirrorOf>
    </mirror>
</mirrors>